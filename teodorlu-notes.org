#+TITLE: Exploring Neil + fzf

This document is a mix of a development journal, design spec and draft for test
to go in a PR.

* 2022-04-02
** Idea: interactive library version selection with =fzf=
Idea: better selection mechanism for a version of a library by shelling out to
fzf. Not sure about the API. Neil currently works with fzf. Perhaps add a
--version-select=fzf arg, or something. We'll see.

For running locally, I'm going to symlink a modified neil from here into a
folder on PATH.

  ln -srf ./neil ~/.local/bin/neilz

Here's a neil add command:

  neil add dep :lib org.clojure/clojure

I'm going to work with an addz command:

  neil addz dep :lib org.clojure/clojure

With =neil addz=, we're going to shell out to =fzf= for version selection rather
than simply picking the latest. =fzf= is kind of an arbitrary choice, not all
people are going to have it installed. The command to shell out to for
completion could be configurable as a CLI argument or an environment variable.
There are other options too, like =rofi= or =dmenu=. I like =fzf= because it's
fast, and stays in the terminal rather than open a window.

I'm also going to remove the side-effecting "change the deps.edn" file to make
it easier to work with in development. That way we can have a simple
live-reloading watch loop and not have to worry about state / cleanup logic.
** Developing
I'm using this thing:

  rg --files | entr -rc bash -c "bb gen-script && neilz addz dep :lib org.clojure/clojure"
** Idea: split neil into search, selection and installation
Search: list versions, given constraints

Selection: pick a version.

Installation: update deps.edn.

If we do this split with pipes, we could use a normal unix pipe.

  neil versions list hiccup/hiccup | fzf | xargs neil dep add
*** I kinda don't want to explore hacking in a --version-selector=fzf when we can just do it the Unix way
No longer want to persue the =neilz addz= stuff, yeah.

Neil's current add API even supports setting the version of a specific library.
=neil add= can already add a library version.
*** Possible unixy way
Idea:

  $ neil versions org.clojure/clojure
  :lib org.clojure/clojure :version 1.11.0
  :lib org.clojure/clojure :version 1.10.0
  :lib org.clojure/clojure :version 1.9.0
  ...

Then:

  $ neil versions org.clojure/clojure | fzf | xargs neil add dep

Could also grep before fzf there if there's too many versions.

Caveat: not sure about the upstream APIs (Maven, Clojars, Git) for listing
versions. Also not sure if confusion between Maven, Clojars and Git is going to
cause problems.
*** Argument order
Realizing that I prefer

  neil deps add

to

  neil add dep

. =neil deps add= lets us know we're working with deps first. Or =neil dep add=.
Or =neil dep available-versions=.

  neil dep available-versions hiccup/hiccup | fzf | xargs neil dep add
*** Actually, available-versions is too long. Let's try versions.
Before:

  neilz dep available-versions hiccup/hiccup | fzf | xargs neil add dep

Now:

  neilz dep versions hiccup/hiccup | fzf | xargs neil add dep
