#+TITLE: Exploring Neil + fzf

This document is a mix of a development journal, design spec and draft for test
to go in a PR.

* 2022-04-02
** Idea: interactive library version selection with =fzf=
Idea: better selection mechanism for a version of a library by shelling out to
fzf. Not sure about the API. Neil currently works with fzf. Perhaps add a
--version-select=fzf arg, or something. We'll see.

For running locally, I'm going to symlink a modified neil from here into a
folder on PATH.

#+begin_src
ln -srf ./neil ~/.local/bin/neilz
#+end_src

Here's a neil add command:

#+begin_src
neil add dep :lib org.clojure/clojure
#+end_src

I'm going to work with an addz command:

#+begin_src
neil addz dep :lib org.clojure/clojure
#+end_src

With =neil addz=, we're going to shell out to =fzf= for version selection rather
than simply picking the latest. =fzf= is kind of an arbitrary choice, not all
people are going to have it installed. The command to shell out to for
completion could be configurable as a CLI argument or an environment variable.
There are other options too, like =rofi= or =dmenu=. I like =fzf= because it's
fast, and stays in the terminal rather than open a window.

I'm also going to remove the side-effecting "change the deps.edn" file to make
it easier to work with in development. That way we can have a simple
live-reloading watch loop and not have to worry about state / cleanup logic.
** Developing
I'm using this thing:

#+begin_src
rg --files | entr -rc bash -c "bb gen-script && neilz addz dep :lib org.clojure/clojure"
#+end_src
** Idea: split neil into search, selection and installation
Search: list versions, given constraints

Selection: pick a version.

Installation: update deps.edn.

If we do this split with pipes, we could use a normal unix pipe.

#+begin_src
neil versions list hiccup/hiccup | fzf | xargs neil dep add
#+end_src
*** I kinda don't want to explore hacking in a --version-selector=fzf when we can just do it the Unix way
No longer want to persue the =neilz addz= stuff, yeah.

Neil's current add API even supports setting the version of a specific library.
=neil add= can already add a library version.
*** Possible unixy way
Idea:

#+begin_src
  $ neil versions org.clojure/clojure
  :lib org.clojure/clojure :version 1.11.0
  :lib org.clojure/clojure :version 1.10.0
  :lib org.clojure/clojure :version 1.9.0
  ...
#+end_src

Then:

#+begin_src
  $ neil versions org.clojure/clojure | fzf | xargs neil add dep
#+end_src

Could also grep before fzf there if there's too many versions.

Caveat: not sure about the upstream APIs (Maven, Clojars, Git) for listing
versions. Also not sure if confusion between Maven, Clojars and Git is going to
cause problems.
*** Argument order
Realizing that I prefer

#+begin_src
  neil deps add
#+end_src

to

#+begin_src
  neil add dep
#+end_src

. =neil deps add= lets us know we're working with deps first. Or =neil dep add=.
Or =neil dep available-versions=.

#+begin_src
  neil dep available-versions hiccup/hiccup | fzf | xargs neil dep add
#+end_src
*** Actually, available-versions is too long. Let's try versions.
Before:

#+begin_src
  neilz dep available-versions hiccup/hiccup | fzf | xargs neil add dep
#+end_src

Now:

#+begin_src
  neilz dep versions hiccup/hiccup | fzf | xargs neil add dep
#+end_src
*** What about listing versions with git deps?
I haven't really used git deps that much.

There's existing code for getting the latest git tag and git ref from Github.
What even ... makes sense ... here?

Listing all tags should be reasonable. But fuzzy-searching on git hash makes no
sense to me.
